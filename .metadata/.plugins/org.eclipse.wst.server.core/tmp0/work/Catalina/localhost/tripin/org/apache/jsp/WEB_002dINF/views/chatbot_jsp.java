/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-05-16 08:57:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chatbot_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1745564305677L));
    _jspx_dependants.put("jar:file:/D:/midproject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/tripin/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title> 챗봇 페이지 </title>\r\n");
      out.write("<!-- Pacifico 폰트 링크 -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- Noto Sans KR 폰트 링크 -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&amp;display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- Remix icon 아이콘 폰트 라이브러리 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css\">\r\n");
      out.write("<!-- 내 css 파일경로 -->\r\n");
      out.write("<link href=\"resources/css/chatbot.css\" rel=\"stylesheet\">\r\n");
      out.write("<!-- jquery -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- 내 js 파일경로 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/chatbot.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-gray-50\">\r\n");
      out.write("	\r\n");
      out.write("	<!-- 헤더 -->\r\n");
      out.write("	<header class=\"place_list_header\">\r\n");
      out.write("	  <div class=\"container\">\r\n");
      out.write("	    <!-- 타이틀 -->\r\n");
      out.write("	    <div class=\"left-header\">\r\n");
      out.write("	     <a href=\"#\" class=\"main_title\">Tripin</a> \r\n");
      out.write("	     <nav class=\"main-nav\">\r\n");
      out.write("	     	<a href=\"#\" class=\"home\">홈</a>\r\n");
      out.write("	     	<a href=\"#\" class=\"trivy\">트리비와 대화하기</a>\r\n");
      out.write("	     	<a href=\"#\" class=\"theme\">테마여행</a>      \r\n");
      out.write("	     </nav>	\r\n");
      out.write("	    </div>\r\n");
      out.write("	  <div class=\"icon-group\">\r\n");
      out.write("	    <button class=\"icon-button\">\r\n");
      out.write("	      <i class=\"ri-user-line\"></i>\r\n");
      out.write("	    </button>\r\n");
      out.write("	  </div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	</header>\r\n");
      out.write("		<main class=\"main-section\">\r\n");
      out.write("			<div class=\"max-w-5xl mx-auto\">\r\n");
      out.write("				<div class=\"main-text\">\r\n");
      out.write("					<h1 class=\"main-title\">\r\n");
      out.write("						AI 여행 플래너와 함께<br>나만의 테마여행을 계획해보세요\r\n");
      out.write("					</h1>\r\n");
      out.write("					<p class=\"main-subtext\">\r\n");
      out.write("						여행 계획부터 문의사항까지<br>AI가 도와드립니다\r\n");
      out.write("					</p>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"card-box\">\r\n");
      out.write("					<div class=\"tab-buttons\">\r\n");
      out.write("						<button id=\"travelTab\" class=\"tab-active\">여행 계획</button>\r\n");
      out.write("						<button id=\"supportTab\"	class=\"tab-inactive\">고객 문의</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"flex gap-6\">\r\n");
      out.write("						<div id=\"chat-reco-container\" class=\"chat-container\">\r\n");
      out.write("							<div class=\"chat-message\">\r\n");
      out.write("								<div class=\"chat-row chat-row-left\">\r\n");
      out.write("									<div class=\"chat-avatar\">\r\n");
      out.write("										<i class=\"ri-robot-line text-white\"></i>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"chat-content\">\r\n");
      out.write("										<div class=\"chat-bubble\">\r\n");
      out.write("											<p class=\"chat-text\">안녕하세요! 저는 당신의 AI여행 플래너 '트리비'입니다. 어떤 여행을 계획하고 계신가요?</p>\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"chat-options\">\r\n");
      out.write("											<button class=\"option-button\">\r\n");
      out.write("												<i class=\"ri-group-line mr-2\"></i>가족 여행\r\n");
      out.write("											</button>\r\n");
      out.write("											<button class=\"option-button\">\r\n");
      out.write("												<i class=\"ri-heart-line mr-2\"></i>커플 여행\r\n");
      out.write("											</button>\r\n");
      out.write("											<button class=\"option-button\">\r\n");
      out.write("												<i class=\"ri-user-line mr-2\"></i>혼자 여행\r\n");
      out.write("											</button>\r\n");
      out.write("											<button class=\"option-button\">\r\n");
      out.write("												<i class=\"ri-user-line mr-2\"></i>친구와 함께\r\n");
      out.write("											</button>\r\n");
      out.write("										</div>										\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 이전 대화 기록 전체 가져오기 수정필요 ****대화안나옴********************** -->\r\n");
      out.write("								");
      out.write("\r\n");
      out.write("								\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<!-- 고객문의 기본 -->\r\n");
      out.write("						<div id=\"chat-inq-container\" class=\"chat-container\">\r\n");
      out.write("							<div class=\"chat-message\">\r\n");
      out.write("								<div class=\"chat-row chat-row-left\">\r\n");
      out.write("									<div class=\"chat-avatar\">\r\n");
      out.write("										<i class=\"ri-robot-line text-white\"></i>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"chat-content\">\r\n");
      out.write("										<div class=\"chat-bubble\">\r\n");
      out.write("											<p class=\"chat-text\">안녕하세요! 고객센터입니다. 문의하실 내용을 선택해주세요!</p>\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"chat-options\">\r\n");
      out.write("											<button class=\"option-inq-button\">\r\n");
      out.write("												<i class=\"ri-group-line mr-2\"></i>이용 문의\r\n");
      out.write("											</button>\r\n");
      out.write("											<button class=\"option-inq-button\">\r\n");
      out.write("												<i class=\"ri-heart-line mr-2\"></i>신고 문의\r\n");
      out.write("											</button>\r\n");
      out.write("											<button class=\"option-inq-button\">\r\n");
      out.write("												<i class=\"ri-user-line mr-2\"></i>추천 문의\r\n");
      out.write("											</button>\r\n");
      out.write("											<button class=\"option-inq-button\">\r\n");
      out.write("												<i class=\"ri-user-line mr-2\"></i>관리자 문의\r\n");
      out.write("											</button>\r\n");
      out.write("										</div>										\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"message-input-wrapper\">\r\n");
      out.write("							<div class=\"message-input-row\">\r\n");
      out.write("								<input type=\"text\" placeholder=\"메시지를 입력하세요...\" class=\"message-input\">\r\n");
      out.write("								<button id=\"send_btn\" class=\"message-input\">\r\n");
      out.write("									<i class=\"ri-send-plane-fill\"></i> 보내기\r\n");
      out.write("								</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</main>\r\n");
      out.write("		<footer class=\"custom-footer\">\r\n");
      out.write("	        <div class=\"footer-container\">\r\n");
      out.write("	            <div class=\"footer-content\">\r\n");
      out.write("	                <div class=\"footer-left\">\r\n");
      out.write("	                    <p class=\"footer-text\">© 2025 Tripin. 모든 권리 보유.</p>\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <div class=\"footer-links\">\r\n");
      out.write("	                    <a href=\"#\">고객센터</a>\r\n");
      out.write("	                    <a href=\"#\">개인정보 처리방침</a>\r\n");
      out.write("	                    <a href=\"#\">이용약관</a>\r\n");
      out.write("	                    <a href=\"#\">로그아웃</a>\r\n");
      out.write("	                </div>\r\n");
      out.write("	            </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("   		 </footer>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\" crossorigin=\"anonymous\"\r\n");
      out.write("		src=\"https://us-assets.i.posthog.com/array/phc_t9tkQZJiyi2ps9zUYm8TDsL6qXo4YmZx0Ot5rBlAlEd/config.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" crossorigin=\"anonymous\"\r\n");
      out.write("		src=\"https://us-assets.i.posthog.com/static/dead-clicks-autocapture.js?v=1.240.6\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("    !function (t, e) { var o, n, p, r; e.__SV || (window.posthog = e, e._i = [], e.init = function (i, s, a) { function g(t, e) { var o = e.split(\".\"); 2 == o.length && (t = t[o[0]], e = o[1]), t[e] = function () { t.push([e].concat(Array.prototype.slice.call(arguments, 0))) } } (p = t.createElement(\"script\")).type = \"text/javascript\", p.crossOrigin = \"anonymous\", p.async = !0, p.src = s.api_host.replace(\".i.posthog.com\", \"-assets.i.posthog.com\") + \"/static/array.js\", (r = t.getElementsByTagName(\"script\")[0]).parentNode.insertBefore(p, r); var u = e; for (void 0 !== a ? u = e[a] = [] : a = \"posthog\", u.people = u.people || [], u.toString = function (t) { var e = \"posthog\"; return \"posthog\" !== a && (e += \".\" + a), t || (e += \" (stub)\"), e }, u.people.toString = function () { return u.toString(1) + \".people (stub)\" }, o = \"init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey getNextSurveyStep identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug\".split(\" \"), n = 0; n < o.length; n++)g(u, o[n]); e._i.push([i, s, a]) }, e.__SV = 1) }(document, window.posthog || []);\r\n");
      out.write("    posthog.init('phc_t9tkQZJiyi2ps9zUYm8TDsL6qXo4YmZx0Ot5rBlAlEd', {\r\n");
      out.write("        api_host: 'https://us.i.posthog.com',\r\n");
      out.write("        autocapture: false,\r\n");
      out.write("        capture_pageview: false,\r\n");
      out.write("        capture_pageleave: false,\r\n");
      out.write("        capture_performance: {\r\n");
      out.write("            web_vitals: false,\r\n");
      out.write("        },\r\n");
      out.write("        rageclick: false,\r\n");
      out.write("    })\r\n");
      out.write("    window.shareKey = 'vvu1-S91ByqFvJ6UrZFq-g';\r\n");
      out.write("    window.host = 'readdy.ai';\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
